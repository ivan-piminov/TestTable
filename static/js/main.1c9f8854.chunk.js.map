{"version":3,"sources":["Loader/Loader.js","Table/Table.js","ItemUser/ItemUser.js","ModeSelector/ModeSelector.js","Search/Search.js","NewUser/NewUser.js","ModalWindow/ModalWindow.js","App.js","serviceWorker.js","index.js"],"names":["className","Table","props","onClick","onSort","sortField","sort","data","map","item","key","id","phone","onRowSelect","bind","firstName","lastName","email","ItemUser","person","style","marginBottom","address","state","city","streetAddress","zip","description","ModeSelector","display","justifyContent","paddingTop","onSelect","Search","useState","value","setValue","onSearch","type","placeholder","aria-label","aria-describedby","onChange","e","target","NewUser","newId","setNewId","newFirstName","setNewFirstName","newLastName","setNewLastName","newEmail","setNewEmail","newPhone","setNewPhone","newState","setNewState","newCity","setNewCity","newStreet","setNewStreet","newZip","setNewZip","newDescription","setNewDescription","buttonStatus","disabled","addNewUser","ModalWindow","width","height","backgroundColor","border","position","ZIndex","padding","flexDirection","alignItems","left","top","transform","textAlign","closeModalWindow","App","isModalWindowOpened","isModeSelected","isLoading","row","currentPage","search","iaAddNewUser","cloneData","concat","_","orderBy","setState","modeSelectHandler","url","loadData","pageChangeHandler","selected","searchHandler","NewUserHandler","newUser","axios","get","response","this","filter","toLowerCase","includes","filteredData","getFilteredData","pageCount","Math","ceil","length","displayData","chunk","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1c9f8854.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Loader.css'\r\n\r\nexport default () => <div className=\"lds-spinner\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>","import React from 'react';\r\n\r\nconst Table = (props) => {\r\n\r\n    const setId = () => {\r\n        props.onSort('id')\r\n    };\r\n    const setFirstName = () => {\r\n        props.onSort('firstName')\r\n    };\r\n    const setLastName = () => {\r\n        props.onSort('lastName')\r\n    };\r\n    const setEmail = () => {\r\n        props.onSort('email')\r\n    };\r\n    const setPhone = () => {\r\n        props.onSort('phone')\r\n    };\r\n\r\n    return (\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"thead-dark\">\r\n            <tr>\r\n                <th onClick={setId}>ID {props.sortField === 'id' ? <small>{props.sort}</small> : null}</th>\r\n                <th onClick={setFirstName}>First Name {props.sortField === 'firstName' ?\r\n                    <small>{props.sort}</small> : null}</th>\r\n                <th onClick={setLastName}>Last Name {props.sortField === 'lastName' ?\r\n                    <small>{props.sort}</small> : null}</th>\r\n                <th onClick={setEmail}>E-mail {props.sortField === 'email' ? <small>{props.sort}</small> : null}</th>\r\n                <th onClick={setPhone}>Phone {props.sortField === 'phone' ? <small>{props.sort}</small> : null}</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {props.data.map(item => (\r\n                <tr key={item.id + item.phone} onClick={props.onRowSelect.bind(null, item)}>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.firstName}</td>\r\n                    <td>{item.lastName}</td>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.phone}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst ItemUser = ({person}) => {\r\n    return (\r\n        <>\r\n            <div><b>Имя:</b> {person.firstName}</div>\r\n            <div><b>Фамилия:</b> {person.lastName}</div>\r\n            <div><b>Почта:</b> {person.email}</div>\r\n            <div><b>Телефон:</b> {person.phone}</div>\r\n            <ul style={{marginBottom: '0px'}}><b>Адрес проживания:</b></ul>\r\n            <li><b>Штат:</b> {person.address.state}</li>\r\n            <li><b>Город:</b> {person.address.city}</li>\r\n            <li><b>Улица:</b> {person.address.streetAddress}</li>\r\n            <li><b>Индекс:</b> {person.address.zip}</li>\r\n            <div><b>Описание:</b> {person.description}</div>\r\n        </>)\r\n};\r\nexport default ItemUser;","import React from \"react\";\r\n\r\nconst ModeSelector = (props) => {\r\n    const smallData = `http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`;\r\n    const bigData = `http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`;\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center', paddingTop: '30%'}}>\r\n            <button onClick={() => props.onSelect(bigData)} className=\"btn btn-success mr-5\">Big Data</button>\r\n            <button onClick={() => props.onSelect(smallData)} className=\"btn btn-success\">Small Data</button>\r\n        </div>\r\n    )\r\n};\r\nexport default ModeSelector;","import React, {useState} from \"react\";\r\n\r\nconst Search = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const valueChange = (e) => {\r\n        setValue(e.target.value)\r\n    };\r\n    return (\r\n        <div className=\"input-group mt-4 mb-4\">\r\n            <div className=\"input-group-prepend\">\r\n                <button onClick={() => props.onSearch(value)} className=\"btn btn-primary\" type=\"button\">Поиск</button>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"введите данные \"\r\n                   aria-label=\"Example text with button addon\"\r\n                   aria-describedby=\"button-addon1\" onChange={valueChange} value={value}/>\r\n        </div>\r\n    )\r\n};\r\nexport default Search;","import React, {useState} from \"react\";\r\n\r\nconst NewUser = (props) => {\r\n    const [newId, setNewId] = useState('');\r\n    const setId = (e) => {\r\n        setNewId(e.target.value)\r\n    };\r\n\r\n    const [newFirstName, setNewFirstName] = useState('');\r\n    const setFirstName = (e) => {\r\n        setNewFirstName(e.target.value)\r\n    };\r\n\r\n    const [newLastName, setNewLastName] = useState('');\r\n    const setLastName = (e) => {\r\n        setNewLastName(e.target.value)\r\n    };\r\n\r\n    const [newEmail, setNewEmail] = useState('');\r\n    const setEmail = (e) => {\r\n        setNewEmail(e.target.value)\r\n    };\r\n\r\n    const [newPhone, setNewPhone] = useState('');\r\n    const setPhone = (e) => {\r\n        setNewPhone(e.target.value)\r\n    };\r\n\r\n    const [newState, setNewState] = useState('');\r\n    const setState = (e) => {\r\n        setNewState(e.target.value)\r\n    };\r\n\r\n    const [newCity, setNewCity] = useState('');\r\n    const setCity = (e) => {\r\n        setNewCity(e.target.value)\r\n    };\r\n\r\n    const [newStreet, setNewStreet] = useState('');\r\n    const setStreet = (e) => {\r\n        setNewStreet(e.target.value)\r\n    };\r\n\r\n    const [newZip, setNewZip] = useState('');\r\n    const setZip = (e) => {\r\n        setNewZip(e.target.value)\r\n    };\r\n\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const setDescription = (e) => {\r\n        setNewDescription(e.target.value)\r\n    };\r\n\r\n\r\n    const addNewUser = () => {\r\n        props.addNewUser({\r\n            'description': newDescription,\r\n            \"id\": newId,\r\n            \"firstName\": newFirstName,\r\n            \"lastName\": newLastName,\r\n            \"email\": newEmail,\r\n            \"phone\": newPhone,\r\n            address: {\r\n                'zip': newZip,\r\n                'streetAddress': newStreet,\r\n                'state': newState,\r\n                'city': newCity,\r\n            }\r\n        });\r\n        setNewId('');\r\n        setNewFirstName('');\r\n        setNewLastName('');\r\n        setNewEmail('');\r\n        setNewPhone('');\r\n        setNewState('');\r\n        setNewCity('');\r\n        setNewStreet('');\r\n        setNewZip('')\r\n        setNewDescription('')\r\n    };\r\n\r\n\r\n    const buttonStatus = !(newId && newFirstName && newLastName && newEmail && newPhone && newState && newCity && newStreet && newZip && newDescription !== '');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-group\">\r\n                <input type=\"number\" placeholder=\"введите ID\" className=\"form-control\" value={newId} onChange={setId}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"введите имя\" className=\"form-control\" value={newFirstName}\r\n                       onChange={setFirstName}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"введите фамилию\" className=\"form-control\" value={newLastName}\r\n                       onChange={setLastName}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"введите E-mail \" className=\"form-control\" value={newEmail}\r\n                       onChange={setEmail}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"введите телефон\" className=\"form-control\" value={newPhone}\r\n                       onChange={setPhone}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"введите название штата\" className=\"form-control\" value={newState}\r\n                       onChange={setState}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"введите название города\" className=\"form-control\" value={newCity}\r\n                       onChange={setCity}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"введите название улицы\" className=\"form-control\" value={newStreet}\r\n                       onChange={setStreet}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"number\" placeholder=\"введите индекс\" className=\"form-control\" value={newZip}\r\n                       onChange={setZip}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea placeholder=\"введите описание\" className=\"form-control\" value={newDescription}\r\n                          onChange={setDescription}/>\r\n            </div>\r\n            <button type='submit' className=\"btn btn-primary mb-2\" disabled={buttonStatus} onClick={addNewUser}>Добавить\r\n                в таблицу\r\n            </button>\r\n        </>\r\n    )\r\n};\r\nexport default NewUser;\r\n","import React from \"react\";\r\n\r\nconst ModalWindow = (props) => {\r\n    return (\r\n        <div style={{\r\n            width: '300px',\r\n            height: '200px',\r\n            backgroundColor: 'white',\r\n            border: '1px solid black',\r\n            position: 'absolute',\r\n            ZIndex: '2',\r\n            padding: '7px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-around',\r\n            alignItems: 'center',\r\n            left: '52%',\r\n            top: '30%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}>\r\n            <div style={{textAlign: 'center'}}>Ошибка загрузки данных, проверье корректность адреса</div>\r\n            <div>\r\n                <button className=\"btn btn-primary btn-sm\" onClick={props.closeModalWindow}> закрыть</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ModalWindow;","import React, {Component} from 'react';\nimport axios from \"axios\"\nimport Loader from \"./Loader/Loader\";\nimport Table from \"./Table/Table\";\nimport _ from 'lodash';\nimport ItemUser from \"./ItemUser/ItemUser\";\nimport ModeSelector from \"./ModeSelector/ModeSelector\";\nimport ReactPaginate from 'react-paginate';\nimport Search from \"./Search/Search\";\nimport NewUser from \"./NewUser/NewUser\";\nimport ModalWindow from \"./ModalWindow/ModalWindow\";\n\n\nclass App extends Component {\n\n    state = {\n        isModalWindowOpened: false,\n        isModeSelected: false,\n        isLoading: false,\n        data: [],\n        sort: 'asc',\n        sortField: 'id',\n        row: {address: {city: \"\", state: \"\", streetAddress: \"\", zip: \"\"}},\n        currentPage: 0,\n        search: '',\n        iaAddNewUser: false\n    };\n\n    onSort = (sortField) => {\n        const cloneData = this.state.data.concat();\n        const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n        const data = _.orderBy(cloneData, sortField, sort);\n        this.setState({\n            data,\n            sort,\n            sortField\n        })\n    };\n    onRowSelect = row => (\n        this.setState({row})\n    );\n\n    async loadData(url) {\n        try {\n            const response = await axios.get(url);\n            this.setState({\n                isLoading: false,\n                data: _.orderBy(response.data, this.state.sortField, this.state.sort)\n            })\n\n        } catch (e) {\n            this.setState({\n                isModalWindowOpened: true\n            })\n        }\n    }\n\n    modeSelectHandler = url => {\n        this.setState({\n            isModeSelected: true,\n            isLoading: true,\n        });\n        this.loadData(url)\n    };\n\n\n    pageChangeHandler = ({selected}) => (\n        this.setState({currentPage: selected})\n    );\n    searchHandler = search => (\n        this.setState({search, currentPage: 0})\n    );\n\n    getFilteredData() {\n        const {data, search} = this.state;\n\n        if (!search) {\n            return data\n        }\n\n        return data.filter(item => {\n            return item['firstName'].toLowerCase().includes(search.toLowerCase())\n                || item['lastName'].toLowerCase().includes(search.toLowerCase())\n                || item['email'].toLowerCase().includes(search.toLowerCase())\n        })\n    }\n\n    NewUserHandler = () => {\n        this.setState({iaAddNewUser: true})\n    };\n\n    addNewUser = (newUser) => {\n        this.setState({\n            data: [newUser, ...this.state.data]\n        });\n    };\n\n    closeModalWindow = () => {\n        this.setState({\n            isModalWindowOpened: false\n        })\n    }\n\n    render() {\n        const pageSize = 50;\n        if (!this.state.isModeSelected) {\n            return (\n                <div className=\"container\">\n                    <ModeSelector onSelect={this.modeSelectHandler}/>\n                </div>\n            )\n        }\n\n        const filteredData = this.getFilteredData();\n        const pageCount = Math.ceil(filteredData.length / pageSize);\n        const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage];\n        return (\n            <div className=\"container\">\n                {this.state.isModalWindowOpened\n                    ? <ModalWindow closeModalWindow={this.closeModalWindow}/>\n                    : null\n                }\n                {this.state.isLoading\n                    ? <Loader/>\n                    : <div>\n                        <Search onSearch={this.searchHandler}/>\n                        <button className=\"btn btn-primary mb-3\" type=\"button\" onClick={this.NewUserHandler}> Добавить\n                        </button>\n                        {this.state.iaAddNewUser\n                            ? <NewUser addNewUser={this.addNewUser}/>\n                            : null\n                        }\n                        <Table data={displayData} onSort={this.onSort} sort={this.state.sort}\n                               sortField={this.state.sortField} onRowSelect={this.onRowSelect}/>\n                        {this.state.data.length > pageSize\n                            ? <ReactPaginate\n                                previousLabel={'<'}\n                                nextLabel={'>'}\n                                breakLabel={'...'}\n                                breakClassName={'break-me'}\n                                pageCount={pageCount}\n                                marginPagesDisplayed={2}\n                                pageRangeDisplayed={5}\n                                onPageChange={this.pageChangeHandler}\n                                containerClassName={'pagination'}\n                                activeClassName={'active'}\n                                pageClassName=\"page-item\"\n                                pageLinkClassName=\"page-link\"\n                                previousClassName=\"page-item\"\n                                nextClassName=\"page-item\"\n                                previousLinkClassName=\"page-link\"\n                                nextLinkClassName=\"page-link\"\n                                forcePage={this.state.currentPage}\n                            />\n                            : null\n                        }\n                        <ItemUser person={this.state.row}/>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}